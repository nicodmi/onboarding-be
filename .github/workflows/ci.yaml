name: CI workflow

on:
  pull_request:
  # We need to run it again on merge to main branch as we use squash commits.
  push:
    branches: [master]

env:
  NODE_VERSION: 12

jobs:
  lint:
    name: linter
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'
      - name: Run npm install
        run: npm install
      - name: NPM lint
        run: npm run lint
      - name: Markdown Lint
        run: npm run lint-md
      - name: Docker Lint
        run: npm run lint-docker
      - name: Docker Hadolint
        run: |
          wget https://github.com/hadolint/hadolint/releases/download/v1.19.0/hadolint-Linux-x86_64 -O /tmp/hadolint
          chmod +x /tmp/hadolint
          /tmp/hadolint Dockerfile
      - name: Json Lint
        run: |
          # Generate the list of json files since jsonlint does not support glob patterns.
          git ls-files | grep ".json" | while read f; do ./node_modules/.bin/jsonlint $f -q; done
      - name: Yaml Lint
        run: |
          pip install yamllint
          yamllint -c .yaml-lint.yaml .

  test:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'
      - name: Run npm install
        run: npm install
      - name: Run npm test
        run: npm test

  audit:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'
      - name: Run npm install
        run: npm install
      - name: Run npm audit
        run: npm audit
